@{
    ViewData["Title"] = "List of GradeTypes";
    var searchName = ViewData["SearchName"] as string;
}

<section class="product-page spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="d-flex text-black">
                    <div class="p-2">
                        <h3>Grade Type List</h3>
                    </div>
                </div>
            </div>
            <div class="my-3">
                <form action="/ManageGrade/CreateGrade" method="get" class="update-status-form">
                    <button type="submit" class="btn btn-outline-primary ml-2">Add</button>
                </form>
            </div>
            <div class="my-3">
                <form id="searchForm" class="form-inline">
                    <div class="input-group">
                        <input type="text" id="searchName" name="searchName" class="form-control" placeholder="Search by name" value="@searchName" />
                        <div class="input-group-append">
                            <button type="submit" id="searchButton" class="btn btn-outline-primary ml-2">Search</button>
                        </div>
                    </div>
                </form>
            </div>
            <table id="subjectTable" class="table table-striped table-bordered table-white text-dark">
                <thead class="thead-light">
                    <tr>
                        <th>Id</th>
                        <th>Grade Type Name</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be dynamically populated here -->
                </tbody>
            </table>
            <nav aria-label="Page navigation">
                <ul id="pagination" class="pagination justify-content-center"></ul>
            </nav>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const apiUrl = 'http://localhost:5231/api/ManageGradeType';
            const rowsPerPage = 5;
            let currentPage = 1;
            let subjects = [];
            let filteredSubjects = [];

            async function fetchSubjects() {
                try {
                    const response = await fetch(`${apiUrl}/GetAllGradeTypes`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    subjects = await response.json();
                    filteredSubjects = subjects;
                    renderTable();
                    renderPagination();
                } catch (error) {
                    console.error('Error fetching subjects:', error);
                }
            }




            function renderTable() {
                const tableBody = document.querySelector('#subjectTable tbody');
                tableBody.innerHTML = '';


                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;
                const paginatedSubjects = filteredSubjects.slice(start, end);

                if (paginatedSubjects.length > 0) {
                    paginatedSubjects.forEach(subject => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                                                    <td width="50">${subject.gradeTypeId}</td>
                                                            <td>${subject.gradeTypeName}</td>
                                            <td width="100">
                                                                        <form method="post" action="/ManageGrade/DeleteGrade?id=${subject.gradeTypeId}" class="delete-form" onsubmit="return confirmDelete();">
                                                                            <input type="hidden" name="id" value="${subject.gradeTypeId}" />
                                                            <button type="submit" class="btn btn-outline-danger btn-sm >
                                                        <span class="icon_trash"></span> Delete
                                                    </button>
                                                </form>
                                            </td>
                                        `;
                        tableBody.appendChild(row);
                    });
                } else {
                    tableBody.innerHTML = '<tr><td colspan="6">No subjects found.</td></tr>';
                }
            }

            function renderPagination() {
                const paginationDiv = document.getElementById('pagination');
                paginationDiv.innerHTML = '';

                const totalPages = Math.ceil(filteredSubjects.length / rowsPerPage);

                for (let i = 1; i <= totalPages; i++) {
                    const pageButton = document.createElement('button');
                    pageButton.textContent = i;
                    pageButton.className = 'btn btn-primary mx-1';
                    pageButton.addEventListener('click', () => {
                        currentPage = i;
                        renderTable();
                    });

                    if (i === currentPage) {
                        pageButton.classList.add('btn-secondary');
                    }

                    paginationDiv.appendChild(pageButton);
                }
            }

            document.getElementById('searchForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const searchName = document.getElementById('searchName').value.trim().toLowerCase();
                filteredSubjects = subjects.filter(subject => subject.gradeTypeName.toLowerCase().includes(searchName));
                currentPage = 1; // Reset to page 1 on new search
                renderTable();
                renderPagination();
            });

            document.addEventListener('submit', async function (e) {
                if (e.target.matches('.delete-form')) {
                    e.preventDefault();
                    if (confirm('Are you sure you want to delete this subject?')) {
                        const form = e.target;
                        const id = form.querySelector('input[name="id"]').value;

                        try {
                            const response = await fetch(`/ManageGrade/DeleteGrade`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                },
                                body: new URLSearchParams({ id: id })
                            });

                            if (response.ok) {
                                alert('Subject deleted successfully.');
                                await fetchSubjects(); // Refresh the teacher list only if the deletion succeeds
                                window.location.reload();
                            } else {
                                console.error('Failed to delete subject.');
                                alert('Failed to delete subject. Please try again.');
                            }
                        } catch (error) {
                            console.error('Error deleting subject:', error);
                        }
                    }
                }
            });

            fetchSubjects(); // Initial fetch
        });

        function confirmDelete() {
            return confirm('Are you sure you want to delete this subject?');
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                alert('@TempData["SuccessMessage"]');
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                alert('@TempData["ErrorMessage"]');
            </text>
        }
    </script>
}
